plugins {
    id 'io.franzbecker.gradle-lombok' version '1.14'
}

dependencies {
    compile 'org.reflections:reflections:0.9.11'
    compile 'com.google.code.gson:gson:2.7'
    compile 'org.freemarker:freemarker:2.3.28'
    compile project(':keanu-project')
    compile files("${System.getProperty('java.home')}/../lib/tools.jar")

    //testing
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.19.1'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

task saveJavadocStringsToFile(type: Javadoc) {
    source = project(':keanu-project').sourceSets.main.allJava

    def docletClasspath = rootProject.compileJava.classpath.files.toList()
    docletClasspath.add(new File(layout.projectDirectory.get().path + "/build/classes/java/main"))
    options.setDocletpath(docletClasspath)
    options.setDoclet("io.improbable.keanu.codegen.python.KeanuProjectDoclet")

    classpath = project(':keanu-project').sourceSets.main.runtimeClasspath
    classpath += project(':keanu-project').sourceSets.main.compileClasspath
}

task runCodeGeneration (type: JavaExec) {
    dependsOn saveJavadocStringsToFile
    classpath sourceSets.main.runtimeClasspath
    main = mainClassName
    args += project.rootDir.toString() + '/keanu-python/keanu/vertex/'
}

task codeGen {
    dependsOn(runCodeGeneration)
    dependsOn(":keanu-python:generateDocumentation")
}

lombok { // optional: values below are the defaults
    version = "1.16.20"
    sha256 = ""
}