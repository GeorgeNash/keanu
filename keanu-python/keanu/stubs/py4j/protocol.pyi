# Stubs for py4j.protocol (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

JAVA_MAX_INT: int
JAVA_MIN_INT: int
JAVA_INFINITY: str
JAVA_NEGATIVE_INFINITY: str
JAVA_NAN: str
ESCAPE_CHAR: str
ENTRY_POINT_OBJECT_ID: str
CONNECTION_PROPERTY_OBJECT_ID: str
GATEWAY_SERVER_OBJECT_ID: str
STATIC_PREFIX: str
DEFAULT_JVM_ID: str
DEFAULT_JVM_NAME: str
BYTES_TYPE: str
INTEGER_TYPE: str
LONG_TYPE: str
BOOLEAN_TYPE: str
DOUBLE_TYPE: str
DECIMAL_TYPE: str
STRING_TYPE: str
REFERENCE_TYPE: str
ARRAY_TYPE: str
SET_TYPE: str
LIST_TYPE: str
MAP_TYPE: str
NULL_TYPE: str
PACKAGE_TYPE: str
CLASS_TYPE: str
METHOD_TYPE: str
NO_MEMBER: str
VOID_TYPE: str
ITERATOR_TYPE: str
PYTHON_PROXY_TYPE: str
END: str
ERROR: str
FATAL_ERROR: str
SUCCESS: str
RETURN_MESSAGE: str
SUCCESS_PACKAGE: Any
SUCCESS_CLASS: Any
CLASS_FQN_START: int
END_COMMAND_PART: Any
NO_MEMBER_COMMAND: Any
CALL_COMMAND_NAME: str
FIELD_COMMAND_NAME: str
CONSTRUCTOR_COMMAND_NAME: str
SHUTDOWN_GATEWAY_COMMAND_NAME: str
LIST_COMMAND_NAME: str
REFLECTION_COMMAND_NAME: str
MEMORY_COMMAND_NAME: str
HELP_COMMAND_NAME: str
ARRAY_COMMAND_NAME: str
JVMVIEW_COMMAND_NAME: str
EXCEPTION_COMMAND_NAME: str
DIR_COMMAND_NAME: str
STREAM_COMMAND_NAME: str
ARRAY_GET_SUB_COMMAND_NAME: str
ARRAY_SET_SUB_COMMAND_NAME: str
ARRAY_SLICE_SUB_COMMAND_NAME: str
ARRAY_LEN_SUB_COMMAND_NAME: str
ARRAY_CREATE_SUB_COMMAND_NAME: str
REFL_GET_UNKNOWN_SUB_COMMAND_NAME: str
REFL_GET_MEMBER_SUB_COMMAND_NAME: str
REFL_GET_JAVA_LANG_CLASS_SUB_COMMAND_NAME: str
LIST_SORT_SUBCOMMAND_NAME: str
LIST_REVERSE_SUBCOMMAND_NAME: str
LIST_SLICE_SUBCOMMAND_NAME: str
LIST_CONCAT_SUBCOMMAND_NAME: str
LIST_MULT_SUBCOMMAND_NAME: str
LIST_IMULT_SUBCOMMAND_NAME: str
LIST_COUNT_SUBCOMMAND_NAME: str
FIELD_GET_SUBCOMMAND_NAME: str
FIELD_SET_SUBCOMMAND_NAME: str
MEMORY_DEL_SUBCOMMAND_NAME: str
MEMORY_ATTACH_SUBCOMMAND_NAME: str
HELP_OBJECT_SUBCOMMAND_NAME: str
HELP_CLASS_SUBCOMMAND_NAME: str
JVM_CREATE_VIEW_SUB_COMMAND_NAME: str
JVM_IMPORT_SUB_COMMAND_NAME: str
JVM_SEARCH_SUB_COMMAND_NAME: str
REMOVE_IMPORT_SUB_COMMAND_NAME: str
PYTHON_PROXY_PREFIX: str
ERROR_RETURN_MESSAGE: Any
SUCCESS_RETURN_MESSAGE: Any
OUTPUT_VOID_COMMAND: Any
AUTH_COMMAND_NAME: str
CALL_PROXY_COMMAND_NAME: str
GARBAGE_COLLECT_PROXY_COMMAND_NAME: str
DIR_FIELDS_SUBCOMMAND_NAME: str
DIR_METHODS_SUBCOMMAND_NAME: str
DIR_STATIC_SUBCOMMAND_NAME: str
DIR_JVMVIEW_SUBCOMMAND_NAME: str
OUTPUT_CONVERTER: Any
INPUT_CONVERTER: Any
ERROR_ON_SEND: str
ERROR_ON_RECEIVE: str

def escape_new_line(original: Any): ...
def unescape_new_line(escaped: Any): ...
def smart_decode(s: Any): ...
def encode_float(float_value: Any): ...
def encode_bytearray(barray: Any): ...
def decode_bytearray(encoded: Any): ...
def is_python_proxy(parameter: Any): ...
def get_command_part(parameter: Any, python_proxy_pool: Optional[Any] = ...): ...
def get_return_value(answer: Any, gateway_client: Any, target_id: Optional[Any] = ..., name: Optional[Any] = ...): ...
def get_error_message(answer: Any, gateway_client: Optional[Any] = ...): ...
def compute_exception_message(default_message: Any, extra_message: Optional[Any] = ...): ...
def is_error(answer: Any): ...
def is_fatal_error(answer: Any): ...
def register_output_converter(output_type: Any, converter: Any) -> None: ...
def register_input_converter(converter: Any, prepend: bool = ...) -> None: ...

class Py4JError(Exception):
    cause: Any = ...
    def __init__(self, args: Optional[Any] = ..., cause: Optional[Any] = ...) -> None: ...

class Py4JAuthenticationError(Py4JError):
    cause: Any = ...
    def __init__(self, args: Optional[Any] = ..., cause: Optional[Any] = ...) -> None: ...

class Py4JNetworkError(Py4JError):
    cause: Any = ...
    when: Any = ...
    def __init__(self, args: Optional[Any] = ..., cause: Optional[Any] = ..., when: Optional[Any] = ...) -> None: ...

class Py4JJavaError(Py4JError):
    args: Any = ...
    errmsg: Any = ...
    java_exception: Any = ...
    exception_cmd: Any = ...
    def __init__(self, msg: Any, java_exception: Any) -> None: ...
