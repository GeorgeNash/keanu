task installPipenv {
    doLast {
        exec {
            commandLine 'pip', 'install', 'pipenv==2018.10.13'
        }
    }
}

task pythonVersionInfo {
    doLast {
        exec {
            commandLine 'python', '--version'
        }
        exec {
            commandLine 'pip', '--version'
        }
        exec {
            commandLine 'pipenv', '--version'
        }
        exec {
            // NB: the python version inside pipenv is not necessarily the same as the version outside pipenv
            commandLine 'pipenv', 'run', 'python', '--version'
        }
        exec {
            // NB: the pip version inside pipenv is not necessarily the same as the version outside pipenv
            commandLine 'pipenv', 'run', 'pip', '--version'
        }
    }
}

task installDependencies {
    doLast {
        exec {
            commandLine 'pipenv', 'install', '--dev', '--python', '3.6'
        }
    }
}
task pytest {
    doLast {
        exec {
            // workaround for bug: this hits an NSP error if it's not run first
            commandLine 'pipenv', 'run', 'pytest', 'tests/test_gradient_optimization.py'
        }
        exec {
            // workaround for bug: this hits an NSP error if it's not run first
            commandLine 'pipenv', 'run', 'pytest', 'tests/test_lorenz.py'
        }
        exec {
            commandLine 'pipenv', 'run', 'pytest', '--ignore=tests/test_gradient_optimization.py', '--ignore=tests/test_lorenz.py'
        }
        exec {
            commandLine 'pipenv', 'run', 'pytest', '--doctest-modules', 'keanu'
        }
    }
}

task generateDocumentation {
    group "pythonDocumentation"
    dependsOn(":codegen:runCodeGeneration")
    doLast {
        exec {
            workingDir("../docs/")
            commandLine "rm", "-rf", "python/"
        }
        exec {
            workingDir("docs/")
            commandLine "pipenv", "run", "make", "html"
        }
        exec {
            // This ensures that there are no directories prefixed with an underscore
            // because Jekyll will ignore these directories which causes the generated docs not to be served properly
            workingDir("docs/")
            commandLine "pipenv", "run", 'python', 'remove_underscores.py'
        }
        exec {
            commandLine 'mv', 'docs/_build/html/', '../docs/python/'
        }
        exec {
            workingDir("docs/")
            commandLine 'rm', '-rf', '_build/'
        }
    }
}

pythonVersionInfo.mustRunAfter(installPipenv)
installDependencies.mustRunAfter(pythonVersionInfo)

task preparePythonEnvironment {
    dependsOn(installPipenv)
    dependsOn(pythonVersionInfo)
    dependsOn(installDependencies)
    dependsOn(":keanu-project:preparePythonClasspath")
    dependsOn(":codegen:runCodeGeneration")
}

generateDocumentation.dependsOn(preparePythonEnvironment)
pytest.dependsOn(preparePythonEnvironment)
test.dependsOn(pytest)
