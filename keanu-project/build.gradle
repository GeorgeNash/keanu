buildscript {
    ext.kotlin_version = '1.2.31'
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '1.14'
    id 'maven'
    id 'jacoco'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'com.google.protobuf'

archivesBaseName = "keanu"

dependencies {

    compile 'org.apache.commons:commons-math3:3.6.1'
    compile('org.nd4j:nd4j-native-platform:1.0.0-beta2') {
    }

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'com.google.guava:guava:20.0'
    compile 'com.google.protobuf:protobuf-java:3.6.1'
    compile group: 'com.opencsv', name: 'opencsv', version: '4.2'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta2'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.8.0-beta2'


    //testing
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.19.1'
    testCompile 'org.jfree:jfreechart:1.0.19'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.15.0'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'ca.umontreal.iro.simul:ssj:3.2.1'

}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }
}

test {
    systemProperty "io.improbable.keanu.defaultRandom.seed", '1'
    systemProperty "dtype", 'double'
}

apply plugin: 'kotlin'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task copyJarsIntoPythonClasspath(type: Copy) {
    dependsOn(build)
    into "$rootDir/keanu-python/keanu/classpath/"
    from jar
    from configurations.compile
}

task deleteUnneededJarsFromPythonClasspath(type: Delete) {
    mustRunAfter(copyJarsIntoPythonClasspath)
    delete fileTree("../keanu-python/keanu/classpath/") {
        include "*-android-*"
        include "*-ios-*"
        include "mkl-*"
        include "*-x86.jar"
        include "*-ppc64le.jar"
        include "*-armhf.jar"
    }
}

task preparePythonClasspath {
    dependsOn deleteUnneededJarsFromPythonClasspath
    dependsOn copyJarsIntoPythonClasspath
}
//Break build on javadoc warnings
tasks.withType(Javadoc) {
    options.addStringOption('Xwerror', '-quiet')
}

lombok { // optional: values below are the defaults
    version = "1.16.20"
    sha256 = ""
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

// Add default user/pass so it's not needed if only building and not publishing to Nexus
if (!hasProperty('nexusUser')) {
    ext.nexusUser = ''
}

if (!hasProperty('nexusPassword')) {
    ext.nexusPassword = ''
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'keanu'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Keanu'
                description = 'A probabilistic approach from an Improbabilistic company'
                url = 'https://github.com/improbable-research/keanu'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'keanu-engineering'
                        name = 'Keanu Improbable'
                        email = 'keanu-engineering@improbable.io'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:improbable-research/keanu.git'
                    developerConnection = 'scm:git@github.com:improbable-research/keanu.git'
                    url = 'https://github.com/improbable-research/keanu.git'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username = nexusUser
                password = nexusPassword
            }
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}